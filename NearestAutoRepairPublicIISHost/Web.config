<?xml version="1.0"?>
<configuration>
  
  <!-- ADDED www.c-sharpcorner.com/UploadFile/amit12345/wcf-service-with-sql-membership-and-roles-provider/ -->
  <connectionStrings>
    <add name="DefaultConnection" connectionString="Data Source=(LocalDB)\v11.0;Initial Catalog=FormsIdentity2;Integrated Security=True" providerName="System.Data.SqlClient" />
  </connectionStrings>
  
  <appSettings>
    <add key="aspnet:UseTaskFriendlySynchronizationContext" value="true" />
  </appSettings>
  <system.web>
    <compilation debug="true" targetFramework="4.5" />
    <httpRuntime targetFramework="4.5"/>
   <!--
    <roleManager enabled="true"></roleManager>
    -->
    
    <!-- ADDED www.c-sharpcorner.com/UploadFile/amit12345/wcf-service-with-sql-membership-and-roles-provider/ -->
    <authentication mode="Forms"/>
    <membership defaultProvider="DefaultMembershipProvider">
      <providers>
        <clear />
        <add name="DefaultMembershipProvider" type="System.Web.Security.SqlMembershipProvider" connectionStringName="DefaultConnection" 
             enablePasswordRetrieval="false" enablePasswordReset="true" requiresQuestionAndAnswer="false" requiresUniqueEmail="false" maxInvalidPasswordAttempts="5" 
             minRequiredPasswordLength="6" minRequiredNonalphanumericCharacters="0" passwordAttemptWindow="10" applicationName="/" />
      </providers>
    </membership>

    <roleManager enabled="true" defaultProvider="AspNetSqlRoleProvider">
      <providers>
        <clear />
        <add connectionStringName="DefaultConnection" applicationName="/" name="AspNetSqlRoleProvider" type="System.Web.Security.SqlRoleProvider" />
      </providers>
    </roleManager>  
     
  </system.web>
  
  
  <system.serviceModel>

  <!--  configure the WCF service to expect that clients pass a user name and password to the service  -->
  <bindings>
    <wsHttpBinding>
      <binding name="wsHttp">
        <readerQuotas maxArrayLength="70000"/>
      <!-- for NetTcpBinding  READ THIS !!!
            https://msdn.microsoft.com/en-us/library/ms789011%28v=vs.110%29.aspx
      -->
        <security mode="TransportWithMessageCredential">
       <!--   <transport clientCredentialType="None"></transport> -->
          <message clientCredentialType="UserName"/>                
        </security>      
      </binding>
    </wsHttpBinding>
  </bindings>
        
    <behaviors>
      <serviceBehaviors>
        <behavior name="ServiceBehavior">
          
          <serviceAuthorization principalPermissionMode="UseAspNetRoles" roleProviderName="AspNetSqlRoleProvider"/>         
          
          <serviceMetadata httpGetEnabled="true" httpsGetEnabled="true"/>
          <serviceThrottling maxConcurrentCalls="3" maxConcurrentInstances="3" maxConcurrentSessions="100"/>
          <serviceDebug includeExceptionDetailInFaults="false"/>
      
          <!-- How to: Use wsHttpBinding with Username Authentication and TransportWithMessageCredentials in WCF Calling from Windows Forms:
          msdn.microsoft.com/en-us/library/ff648840.aspx  -->
            
          <serviceCredentials>
            
            <!--
            <clientCertificate>
              <authentication certificateValidationMode="ChainTrust" revocationMode="NoCheck"/>
              <certificate findValue="WCfClient" storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectName" />
            </clientCertificate>
            -->
            
            <!--  VIEW CERTIFICATES: certmgr.msc  -->
           <!-- <serviceCertificate findValue="WCFNearestAutoRepairCertificate" storeLocation="LocalMachine" storeName="TrustedPeople" x509FindType="FindBySubjectName" />   -->
            
            
            <serviceCertificate findValue="localhost" storeLocation="LocalMachine" storeName="My" x509FindType="FindByIssuerName" />
            <userNameAuthentication userNamePasswordValidationMode="MembershipProvider" membershipProviderName="DefaultMembershipProvider"/>          

          </serviceCredentials>   
          
          
        </behavior>        
        
        <behavior>
          <!-- To avoid disclosing metadata information, set the values below to false before deployment -->
          <serviceMetadata httpGetEnabled="true" />
          <!-- To receive exception details in faults for debugging purposes, set the value below to true.  Set to false before deployment to avoid disclosing exception information -->
          <serviceDebug includeExceptionDetailInFaults="false"/>
        </behavior>        
      </serviceBehaviors>
    </behaviors>
        
<!-- dotnetmentors.com/hosting-wcf-service-with-nettcpbinding-or-netnamedpipebinding-in-iis.aspx
        Net.Tcp Listener adapter if you are using netTcpBinding   -->
        <!-- ADDED -->
        <services>
          <service name="NearestAutoRepairService.NearestAutoRepairService" behaviorConfiguration="ServiceBehavior">
            <endpoint address="" binding="wsHttpBinding" bindingConfiguration="wsHttp" contract="NearestAutoRepairService.INearestAutoRepairService" />
            <!-- last removeD -->
            <endpoint address="mex" binding="mexHttpsBinding" contract="IMetadataExchange" />          
          <!-- last removeD -->
          <host>
              <baseAddresses>                
               <add baseAddress="https://localhost:8080/" /> 
            </baseAddresses>
            </host>         
         </service>
      </services>
        <!-- ADDED -->
    
    <protocolMapping>
        <add binding="basicHttpsBinding" scheme="https" />
    </protocolMapping>    
    <serviceHostingEnvironment aspNetCompatibilityEnabled="true" multipleSiteBindingsEnabled="true" />
  </system.serviceModel>
  
  <system.webServer>
    <modules runAllManagedModulesForAllRequests="true"/>
    <!--
        To browse web app root directory during debugging, set the value below to true.
        Set to false before deployment to avoid disclosing web app folder information.
      -->
    <directoryBrowse enabled="true"/>
  </system.webServer>

</configuration>