//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.34209
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3 {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
    [System.SerializableAttribute()]
    public partial class AutoRepairFault : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ErrorMessageField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string SourceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StackTraceField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TargetField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ErrorMessage {
            get {
                return this.ErrorMessageField;
            }
            set {
                if ((object.ReferenceEquals(this.ErrorMessageField, value) != true)) {
                    this.ErrorMessageField = value;
                    this.RaisePropertyChanged("ErrorMessage");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Source {
            get {
                return this.SourceField;
            }
            set {
                if ((object.ReferenceEquals(this.SourceField, value) != true)) {
                    this.SourceField = value;
                    this.RaisePropertyChanged("Source");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string StackTrace {
            get {
                return this.StackTraceField;
            }
            set {
                if ((object.ReferenceEquals(this.StackTraceField, value) != true)) {
                    this.StackTraceField = value;
                    this.RaisePropertyChanged("StackTrace");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Target {
            get {
                return this.TargetField;
            }
            set {
                if ((object.ReferenceEquals(this.TargetField, value) != true)) {
                    this.TargetField = value;
                    this.RaisePropertyChanged("Target");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoRepairWCF", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
    [System.SerializableAttribute()]
    public partial class AutoRepairWCF : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeolocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Geolocation {
            get {
                return this.GeolocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GeolocationField, value) != true)) {
                    this.GeolocationField = value;
                    this.RaisePropertyChanged("Geolocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="AutoRepairShopInfos", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
    [System.SerializableAttribute()]
    public partial class AutoRepairShopInfos : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AddressField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CityField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string PhoneField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UrlField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string GeolocationField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int ID {
            get {
                return this.IDField;
            }
            set {
                if ((this.IDField.Equals(value) != true)) {
                    this.IDField = value;
                    this.RaisePropertyChanged("ID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=2)]
        public string Address {
            get {
                return this.AddressField;
            }
            set {
                if ((object.ReferenceEquals(this.AddressField, value) != true)) {
                    this.AddressField = value;
                    this.RaisePropertyChanged("Address");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=3)]
        public string City {
            get {
                return this.CityField;
            }
            set {
                if ((object.ReferenceEquals(this.CityField, value) != true)) {
                    this.CityField = value;
                    this.RaisePropertyChanged("City");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=4)]
        public string Phone {
            get {
                return this.PhoneField;
            }
            set {
                if ((object.ReferenceEquals(this.PhoneField, value) != true)) {
                    this.PhoneField = value;
                    this.RaisePropertyChanged("Phone");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=5)]
        public string Url {
            get {
                return this.UrlField;
            }
            set {
                if ((object.ReferenceEquals(this.UrlField, value) != true)) {
                    this.UrlField = value;
                    this.RaisePropertyChanged("Url");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute(Order=6)]
        public string Geolocation {
            get {
                return this.GeolocationField;
            }
            set {
                if ((object.ReferenceEquals(this.GeolocationField, value) != true)) {
                    this.GeolocationField = value;
                    this.RaisePropertyChanged("Geolocation");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="NearestAutoRepairServiceRef3.INearestAutoRepairService")]
    public interface INearestAutoRepairService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetData", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetDataResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetDataAutoRepairFaultFault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        string GetData();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetData", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetDataResponse")]
        System.Threading.Tasks.Task<string> GetDataAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairs", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsAutoRepairFaultFaul" +
            "t", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[] GetAllAutoRepairs();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairs", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsResponse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[]> GetAllAutoRepairsAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairs", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairsResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairsAutoRepairF" +
            "aultFault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[] GetFiveNearestAutoRepairs(string userLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairs", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairsResponse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[]> GetFiveNearestAutoRepairsAsync(string userLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepair", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairAutoRepairFaultF" +
            "ault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF GetNearestAutoRepair(string userLocation);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepair", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairResponse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF> GetNearestAutoRepairAsync(string userLocation);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://MyCompany.com/AutoRepair) of message AutoRepairShopRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsRequestAutoRepairFa" +
            "ultFault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList GetAllAutoRepairsRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetAllAutoRepairsRequestResponse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> GetAllAutoRepairsRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairRequestResponse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairRequestAutoRepai" +
            "rFaultFault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfo GetNearestAutoRepairRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
        
        // CODEGEN: Generating message contract since the operation has multiple return values.
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetNearestAutoRepairRequestResponse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfo> GetNearestAutoRepairRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
        
        // CODEGEN: Generating message contract since the wrapper namespace (http://MyCompany.com/AutoRepair) of message AutoRepairShopRequest does not match the default value (http://tempuri.org/)
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairRequestRespo" +
            "nse")]
        [System.ServiceModel.FaultContractAttribute(typeof(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairFault), Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairRequestAutoR" +
            "epairFaultFault", Name="AutoRepairFault", Namespace="http://schemas.datacontract.org/2004/07/NearestAutoRepairService")]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList GetFiveNearestAutoRepairRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairRequest", ReplyAction="http://tempuri.org/INearestAutoRepairService/GetFiveNearestAutoRepairRequestRespo" +
            "nse")]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> GetFiveNearestAutoRepairRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request);
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoRepairShopRequestObject", WrapperNamespace="http://MyCompany.com/AutoRepair", IsWrapped=true)]
    public partial class AutoRepairShopRequest {
        
        [System.ServiceModel.MessageHeaderAttribute(Namespace="http://tempuri.org/")]
        public string LicenseKey;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public string Geolocation;
        
        public AutoRepairShopRequest() {
        }
        
        public AutoRepairShopRequest(string LicenseKey, string Geolocation) {
            this.LicenseKey = LicenseKey;
            this.Geolocation = Geolocation;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoRepairShopResponse", WrapperNamespace="http://MyCompany.com/AutoRepair", IsWrapped=true)]
    public partial class AutoRepairShopInfoList {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://tempuri.org/", Order=0)]
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfos[] AutoRepairShopInfosList;
        
        public AutoRepairShopInfoList() {
        }
        
        public AutoRepairShopInfoList(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfos[] AutoRepairShopInfosList) {
            this.AutoRepairShopInfosList = AutoRepairShopInfosList;
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.MessageContractAttribute(WrapperName="AutoRepairShopInfoObject", WrapperNamespace="http://MyCompany.com/AutoRepair", IsWrapped=true)]
    public partial class AutoRepairShopInfo {
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=0)]
        public int ID;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=1)]
        public string Name;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=2)]
        public string Address;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=3)]
        public string City;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=4)]
        public string Phone;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=5)]
        public string Url;
        
        [System.ServiceModel.MessageBodyMemberAttribute(Namespace="http://MyCompany.com/AutoRepair", Order=6)]
        public string Geolocation;
        
        public AutoRepairShopInfo() {
        }
        
        public AutoRepairShopInfo(int ID, string Name, string Address, string City, string Phone, string Url, string Geolocation) {
            this.ID = ID;
            this.Name = Name;
            this.Address = Address;
            this.City = City;
            this.Phone = Phone;
            this.Url = Url;
            this.Geolocation = Geolocation;
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface INearestAutoRepairServiceChannel : NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class NearestAutoRepairServiceClient : System.ServiceModel.ClientBase<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService>, NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService {
        
        public NearestAutoRepairServiceClient() {
        }
        
        public NearestAutoRepairServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public NearestAutoRepairServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NearestAutoRepairServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public NearestAutoRepairServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string GetData() {
            return base.Channel.GetData();
        }
        
        public System.Threading.Tasks.Task<string> GetDataAsync() {
            return base.Channel.GetDataAsync();
        }
        
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[] GetAllAutoRepairs() {
            return base.Channel.GetAllAutoRepairs();
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[]> GetAllAutoRepairsAsync() {
            return base.Channel.GetAllAutoRepairsAsync();
        }
        
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[] GetFiveNearestAutoRepairs(string userLocation) {
            return base.Channel.GetFiveNearestAutoRepairs(userLocation);
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF[]> GetFiveNearestAutoRepairsAsync(string userLocation) {
            return base.Channel.GetFiveNearestAutoRepairsAsync(userLocation);
        }
        
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF GetNearestAutoRepair(string userLocation) {
            return base.Channel.GetNearestAutoRepair(userLocation);
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairWCF> GetNearestAutoRepairAsync(string userLocation) {
            return base.Channel.GetNearestAutoRepairAsync(userLocation);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService.GetAllAutoRepairsRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetAllAutoRepairsRequest(request);
        }
        
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfos[] GetAllAutoRepairsRequest(string LicenseKey, string Geolocation) {
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest inValue = new NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Geolocation = Geolocation;
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList retVal = ((NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService)(this)).GetAllAutoRepairsRequest(inValue);
            return retVal.AutoRepairShopInfosList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService.GetAllAutoRepairsRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetAllAutoRepairsRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> GetAllAutoRepairsRequestAsync(string LicenseKey, string Geolocation) {
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest inValue = new NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Geolocation = Geolocation;
            return ((NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService)(this)).GetAllAutoRepairsRequestAsync(inValue);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfo NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService.GetNearestAutoRepairRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetNearestAutoRepairRequest(request);
        }
        
        public int GetNearestAutoRepairRequest(string LicenseKey, ref string Geolocation, out string Name, out string Address, out string City, out string Phone, out string Url) {
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest inValue = new NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Geolocation = Geolocation;
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfo retVal = ((NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService)(this)).GetNearestAutoRepairRequest(inValue);
            Name = retVal.Name;
            Address = retVal.Address;
            City = retVal.City;
            Phone = retVal.Phone;
            Url = retVal.Url;
            Geolocation = retVal.Geolocation;
            return retVal.ID;
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfo> GetNearestAutoRepairRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetNearestAutoRepairRequestAsync(request);
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService.GetFiveNearestAutoRepairRequest(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetFiveNearestAutoRepairRequest(request);
        }
        
        public NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfos[] GetFiveNearestAutoRepairRequest(string LicenseKey, string Geolocation) {
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest inValue = new NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Geolocation = Geolocation;
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList retVal = ((NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService)(this)).GetFiveNearestAutoRepairRequest(inValue);
            return retVal.AutoRepairShopInfosList;
        }
        
        [System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService.GetFiveNearestAutoRepairRequestAsync(NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest request) {
            return base.Channel.GetFiveNearestAutoRepairRequestAsync(request);
        }
        
        public System.Threading.Tasks.Task<NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopInfoList> GetFiveNearestAutoRepairRequestAsync(string LicenseKey, string Geolocation) {
            NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest inValue = new NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.AutoRepairShopRequest();
            inValue.LicenseKey = LicenseKey;
            inValue.Geolocation = Geolocation;
            return ((NearestAutoRepairWindowsClient.NearestAutoRepairServiceRef3.INearestAutoRepairService)(this)).GetFiveNearestAutoRepairRequestAsync(inValue);
        }
    }
}
